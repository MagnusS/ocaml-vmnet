# OASIS_START
# DO NOT EDIT (digest: 1e0720b31ad0782748c8f99c8cf14ef5)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library vmnet
"lib/vmnet.cmxs": use_vmnet
<lib/*.ml{,i,y}>: oasis_library_vmnet_ccopt
"lib/vmnet_stubs.c": oasis_library_vmnet_ccopt
<lib/vmnet.{cma,cmxa}>: oasis_library_vmnet_cclib
"lib/libvmnet_stubs.lib": oasis_library_vmnet_cclib
"lib/dllvmnet_stubs.dll": oasis_library_vmnet_cclib
"lib/libvmnet_stubs.a": oasis_library_vmnet_cclib
"lib/dllvmnet_stubs.so": oasis_library_vmnet_cclib
<lib/vmnet.{cma,cmxa}>: use_libvmnet_stubs
"lib/vmnet_stubs.c": pkg_bigarray
"lib/vmnet_stubs.c": pkg_cstruct.syntax
"lib/vmnet_stubs.c": pkg_cstruct.unix
"lib/vmnet_stubs.c": pkg_ipaddr
"lib/vmnet_stubs.c": pkg_sexplib
"lib/vmnet_stubs.c": pkg_sexplib.syntax
"lib/vmnet_stubs.c": pkg_threads
"lib/vmnet_stubs.c": pkg_unix
# Library lwt-vmnet
"lib/lwt-vmnet.cmxs": use_lwt-vmnet
<lib/*.ml{,i,y}>: pkg_bigarray
<lib/*.ml{,i,y}>: pkg_cstruct.syntax
<lib/*.ml{,i,y}>: pkg_cstruct.unix
<lib/*.ml{,i,y}>: pkg_ipaddr
<lib/*.ml{,i,y}>: pkg_lwt.preemptive
<lib/*.ml{,i,y}>: pkg_lwt.syntax
<lib/*.ml{,i,y}>: pkg_lwt.unix
<lib/*.ml{,i,y}>: pkg_sexplib
<lib/*.ml{,i,y}>: pkg_sexplib.syntax
<lib/*.ml{,i,y}>: pkg_threads
<lib/*.ml{,i,y}>: pkg_unix
<lib/*.ml{,i,y}>: use_vmnet
# Executable vmnet_listen
<lib_test/vmnet_listen.{native,byte}>: pkg_bigarray
<lib_test/vmnet_listen.{native,byte}>: pkg_cstruct.syntax
<lib_test/vmnet_listen.{native,byte}>: pkg_cstruct.unix
<lib_test/vmnet_listen.{native,byte}>: pkg_ipaddr
<lib_test/vmnet_listen.{native,byte}>: pkg_sexplib
<lib_test/vmnet_listen.{native,byte}>: pkg_sexplib.syntax
<lib_test/vmnet_listen.{native,byte}>: pkg_threads
<lib_test/vmnet_listen.{native,byte}>: pkg_unix
<lib_test/vmnet_listen.{native,byte}>: use_vmnet
<lib_test/*.ml{,i,y}>: pkg_bigarray
<lib_test/*.ml{,i,y}>: pkg_cstruct.syntax
<lib_test/*.ml{,i,y}>: pkg_cstruct.unix
<lib_test/*.ml{,i,y}>: pkg_ipaddr
<lib_test/*.ml{,i,y}>: pkg_sexplib
<lib_test/*.ml{,i,y}>: pkg_sexplib.syntax
<lib_test/*.ml{,i,y}>: pkg_threads
<lib_test/*.ml{,i,y}>: pkg_unix
<lib_test/*.ml{,i,y}>: use_vmnet
<lib_test/vmnet_listen.{native,byte}>: custom
# OASIS_STOP
true: principal, strict_sequence, debug, short_paths
